name: PrintScript CI

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string

jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21
        uses: actions/setup-java@v1
        with:
          java-version: 21

      - name: Create .env file
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
        working-directory: './'

      - name: Build ignoring tests
        run: |
          chmod +x gradlew
            ./gradlew build -x test -x spotlessCheck -x detekt -x koverVerify
        env:
          GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Install and run Docker
#        run: |
#          sudo apt-get update
#          sudo apt-get install -y docker-compose
#          docker-compose up

      - name: Check Spotless
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
        with:
          command: 'docker-compose exec ${{inputs.service_name}} ./gradlew spotlessCheck'
          file: './docker-compose.yml'
          registry: ''
          service: ''
      - name: Check detekt
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
        with:
          command: 'docker-compose exec ${{inputs.service_name}} ./gradlew detekt'
          file: './docker-compose.yml'
          registry: ''
          service: ''
      - name: Check kover
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
        with:
          command: 'docker-compose exec ${{inputs.service_name}} ./gradlew koverVerify'
          file: './docker-compose.yml'
          registry: ''
          service: ''
      - name: Check test
        uses: cloudposse/github-action-docker-compose-test-run@0.2.0
        with:
          command: 'docker-compose exec ${{inputs.service_name}} ./gradlew test'
          file: './docker-compose.yml'
          registry: ''
          service: ''

#      - name: Stop Docker
#        run: docker-compose down
