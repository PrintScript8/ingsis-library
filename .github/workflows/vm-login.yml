name: "Update VM Docker"

on:
  workflow_call:
    inputs:
      service_name:
        required: true
        type: string
      is_dev:
        required: true
        type: boolean
      is_image:
        required: true
        type: boolean
      port:
        required: false
        type: string

jobs:
  vm_actions:
    name: Update VM Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to VM and execute script
        uses: nekiro/ssh-job@v1.0.5
        with:
          user: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_KEY }}
          host: ${{ secrets.DEV_HOST }}
          envs: |
            {
              "SERVICE_NAME": "${{ inputs.service_name }}",
              "IS_DEV": "${{ inputs.is_dev }}",
              "IS_IMAGE": "${{ inputs.is_image }}",
              "PORT": "${{ inputs.port }}"
            }
          command: |
            # Create a temporary script file on the VM
            touch update_vm_docker.sh | echo '
            cd Infrastructure

            # Log in to Docker
            sudo docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

            # Pull the latest image
            sudo docker pull ghcr.io/printscript8/${SERVICE_NAME}:latest

            # Stop and remove any existing container
            sudo docker stop ${SERVICE_NAME} || true
            sudo docker rm ${SERVICE_NAME} || true

            # Determine if we are in dev or prod environment based on IS_DEV and IS_IMAGE inputs
            if [ "${IS_DEV}" = "true" ]; then
              if [ "${IS_IMAGE}" = "true" ]; then
                echo "Running docker-compose.dev.yaml with image"
                sudo docker-compose -f docker-compose.dev.yaml up -d
              else
                echo "Running docker-compose.dev.yaml without image"
                sudo docker-compose -f docker-compose.dev.yaml up -d --no-build
              fi
            elif [ "${IS_DEV}" = "false" ]; then
              if [ "${IS_IMAGE}" = "true" ]; then
                echo "Running docker-compose.prod.yaml with image"
                sudo docker-compose -f docker-compose.prod.yaml up -d
              else
                echo "Running docker-compose.prod.yaml without image"
                sudo docker-compose -f docker-compose.prod.yaml up -d --no-build
              fi
            else
              # Default case: Run the container directly
              echo "Running the container without docker-compose"
              sudo docker run -d --name ${SERVICE_NAME} -p ${PORT}:8080 ghcr.io/printscript8/${SERVICE_NAME}:latest
            fi
            ' > update_vm_docker.sh | chmod +x update_vm_docker.sh | bash update_vm_docker.sh | rm update_vm_docker.sh